# Generated by Django 3.2.18 on 2024-02-07 08:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Distance_Main',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_Main',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W111_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W111_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W111_P1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W111_P1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W111_P2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W111_P2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W112_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W112_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P5',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W113_P6',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W113_P6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W121_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W121_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W122_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W122_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W123_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W123_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P5',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W1_P6',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W1_P6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W3_M',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W3_M',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W3_P1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W3_P1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W3_P2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W3_P2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W3_P3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W3_P3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distance_W3_P4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Distance_W3_P4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsReceiveToTiger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idmainfromwms', models.CharField(db_collation='Thai_CI_AS', max_length=50)),
                ('usermachine', models.CharField(db_collation='Thai_CI_AS', max_length=50)),
                ('matno', models.CharField(db_collation='Thai_CI_AS', max_length=50)),
                ('matname', models.CharField(db_collation='Thai_CI_AS', max_length=100)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('gdate', models.DateField()),
                ('shift', models.CharField(db_collation='Thai_CI_AS', max_length=1)),
                ('machine', models.CharField(db_collation='Thai_CI_AS', max_length=3)),
                ('typeproduct', models.CharField(db_collation='Thai_CI_AS', max_length=3)),
                ('qtyw', models.IntegerField(blank=True, null=True)),
                ('qtye', models.IntegerField(blank=True, null=True)),
                ('typez', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('dateproductionz', models.DateField(blank=True, null=True)),
                ('shiftproductionz', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('month', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=2, null=True)),
                ('pallet', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('ton', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('batch', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('approver', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('datetimewmssend', models.DateTimeField()),
                ('tigerpart', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('datesapgr', models.DateField(blank=True, null=True)),
                ('timesapgr', models.TimeField(blank=True, null=True)),
                ('matdocgr', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
            ],
            options={
                'db_table': 'goodsreceive_to_tiger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matno', models.TextField(blank=True, db_column='MatNo', null=True)),
                ('mat_eng', models.TextField(blank=True, db_column='Mat_Eng', null=True)),
                ('mat_thai', models.TextField(blank=True, db_column='Mat_Thai', null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, db_column='PCsPerPallet', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('groups', models.TextField(blank=True, db_column='Groups', null=True)),
                ('subgroup', models.TextField(blank=True, db_column='Subgroup', null=True)),
                ('spec', models.TextField(blank=True, db_column='Spec', null=True)),
                ('size', models.IntegerField(blank=True, db_column='Size', null=True)),
                ('tickness', models.IntegerField(blank=True, db_column='Tickness', null=True)),
                ('color', models.TextField(blank=True, db_column='Color', null=True)),
                ('report_type', models.TextField(blank=True, db_column='Report_Type', null=True)),
                ('destination', models.TextField(blank=True, null=True)),
                ('typeproduct', models.TextField(blank=True, null=True)),
                ('ct1', models.TextField(blank=True, db_column='CT1', null=True)),
                ('ct2', models.TextField(blank=True, db_column='CT2', null=True)),
                ('ct3', models.TextField(blank=True, db_column='CT3', null=True)),
                ('ct4', models.TextField(blank=True, db_column='CT4', null=True)),
                ('xy1', models.TextField(blank=True, db_column='XY1', null=True)),
                ('cm5', models.TextField(blank=True, db_column='CM5', null=True)),
                ('cm6', models.TextField(blank=True, db_column='CM6', null=True)),
                ('cm7', models.TextField(blank=True, db_column='CM7', null=True)),
                ('cm8', models.TextField(blank=True, db_column='CM8', null=True)),
                ('as1', models.TextField(blank=True, db_column='AS1', null=True)),
                ('pk1', models.TextField(blank=True, db_column='PK1', null=True)),
                ('pk2', models.TextField(blank=True, db_column='PK2', null=True)),
                ('pk3', models.TextField(blank=True, db_column='PK3', null=True)),
                ('pk4', models.TextField(blank=True, db_column='PK4', null=True)),
                ('pk5', models.TextField(blank=True, db_column='PK5', null=True)),
                ('dp1', models.TextField(blank=True, db_column='DP1', null=True)),
                ('det', models.TextField(blank=True, db_column='DET', null=True)),
                ('ms1', models.TextField(blank=True, db_column='MS1', null=True)),
                ('oc1', models.TextField(blank=True, db_column='OC1', null=True)),
                ('oc2', models.TextField(blank=True, db_column='OC2', null=True)),
                ('os1', models.TextField(blank=True, db_column='OS1', null=True)),
                ('pl1', models.TextField(blank=True, db_column='PL1', null=True)),
                ('rt1', models.TextField(blank=True, db_column='RT1', null=True)),
                ('rt2', models.TextField(blank=True, db_column='RT2', null=True)),
                ('sd1', models.TextField(blank=True, db_column='SD1', null=True)),
                ('seg', models.TextField(blank=True, db_column='SEG', null=True)),
                ('dp2', models.TextField(blank=True, db_column='DP2', null=True)),
                ('pk6', models.TextField(blank=True, db_column='PK6', null=True)),
            ],
            options={
                'db_table': 'ItemMaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMasterProductFG',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('zca', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('pcpallet', models.IntegerField(blank=True, null=True)),
                ('zcacustomer', models.FloatField(blank=True, null=True)),
                ('weightkg', models.FloatField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('om', models.TextField(blank=True, null=True)),
                ('namethai', models.TextField(blank=True, null=True)),
                ('nameen', models.TextField(blank=True, null=True)),
                ('size', models.TextField(blank=True, null=True)),
                ('csr', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('hs3_tl', models.TextField(blank=True, db_column='HS3_TL', null=True)),
                ('hs4_tl', models.TextField(blank=True, db_column='HS4_TL', null=True)),
                ('hs5_tl', models.TextField(blank=True, db_column='HS5_TL', null=True)),
                ('hs6_tl', models.TextField(blank=True, db_column='HS6_TL', null=True)),
                ('hs7_tl', models.TextField(blank=True, db_column='HS7_TL', null=True)),
                ('hs8_tl', models.TextField(blank=True, db_column='HS8_TL', null=True)),
                ('hs9_tl', models.TextField(blank=True, db_column='HS9_TL', null=True)),
                ('ct1_tl', models.TextField(blank=True, db_column='CT1_TL', null=True)),
                ('ct2_tl', models.TextField(blank=True, db_column='CT2_TL', null=True)),
                ('ct3_tl', models.TextField(blank=True, db_column='CT3_TL', null=True)),
                ('ct4_tl', models.TextField(blank=True, db_column='CT4_TL', null=True)),
                ('cm5_tl', models.TextField(blank=True, db_column='CM5_TL', null=True)),
                ('cm6_tl', models.IntegerField(blank=True, db_column='CM6_TL', null=True)),
                ('cm7_tl', models.TextField(blank=True, db_column='CM7_TL', null=True)),
                ('cm8_tl', models.TextField(blank=True, db_column='CM8_TL', null=True)),
                ('dp1_tl', models.TextField(blank=True, db_column='DP1_TL', null=True)),
                ('dp2_tl', models.TextField(blank=True, db_column='DP2_TL', null=True)),
                ('det_tl', models.TextField(blank=True, db_column='DET_TL', null=True)),
                ('ms1_tl', models.TextField(blank=True, db_column='MS1_TL', null=True)),
                ('oc1_tl', models.TextField(blank=True, db_column='OC1_TL', null=True)),
                ('oc2_tl', models.TextField(blank=True, db_column='OC2_TL', null=True)),
                ('os1_tl', models.TextField(blank=True, db_column='OS1_TL', null=True)),
                ('pk1_tl', models.TextField(blank=True, db_column='PK1_TL', null=True)),
                ('pk2_tl', models.IntegerField(blank=True, db_column='PK2_TL', null=True)),
                ('pk3_tl', models.IntegerField(blank=True, db_column='PK3_TL', null=True)),
                ('pk4_tl', models.TextField(blank=True, db_column='PK4_TL', null=True)),
                ('pk5_tl', models.TextField(blank=True, db_column='PK5_TL', null=True)),
                ('pk6_tl', models.TextField(blank=True, db_column='PK6_TL', null=True)),
                ('pl1_tl', models.TextField(blank=True, db_column='PL1_TL', null=True)),
                ('rt1_tl', models.TextField(blank=True, db_column='RT1_TL', null=True)),
                ('rt2_tl', models.TextField(blank=True, db_column='RT2_TL', null=True)),
                ('sd1_tl', models.TextField(blank=True, db_column='SD1_TL', null=True)),
                ('seg_tl', models.TextField(blank=True, db_column='SEG_TL', null=True)),
                ('sizemm', models.TextField(blank=True, null=True)),
                ('hs1_nk', models.TextField(blank=True, db_column='HS1_NK', null=True)),
                ('hs2_nk', models.TextField(blank=True, db_column='HS2_NK', null=True)),
                ('cm1_nk', models.TextField(blank=True, db_column='CM1_NK', null=True)),
                ('cm2_nk', models.TextField(blank=True, db_column='CM2_NK', null=True)),
                ('pk1_nk', models.TextField(blank=True, db_column='PK1_NK', null=True)),
                ('pko_nk', models.TextField(blank=True, db_column='PKO_NK', null=True)),
                ('pk2_nk', models.IntegerField(blank=True, db_column='PK2_NK', null=True)),
                ('ms1_nk', models.TextField(blank=True, db_column='MS1_NK', null=True)),
                ('det_nk', models.TextField(blank=True, db_column='DET_NK', null=True)),
                ('seg_nk', models.TextField(blank=True, db_column='SEG_NK', null=True)),
                ('es1_nk', models.TextField(blank=True, db_column='ES1_NK', null=True)),
                ('es2_nk', models.TextField(blank=True, db_column='ES2_NK', null=True)),
                ('lm1_nk', models.TextField(blank=True, db_column='LM1_NK', null=True)),
                ('dr1_nk', models.TextField(blank=True, db_column='DR1_NK', null=True)),
                ('tc1_nk', models.TextField(blank=True, db_column='TC1_NK', null=True)),
                ('sp1_nk', models.TextField(blank=True, db_column='SP1_NK', null=True)),
                ('fw1_nk', models.TextField(blank=True, db_column='FW1_NK', null=True)),
                ('cp1_nk', models.TextField(blank=True, db_column='CP1_NK', null=True)),
                ('ak1_nk', models.TextField(blank=True, db_column='AK1_NK', null=True)),
                ('fs1_nk', models.TextField(blank=True, db_column='FS1_NK', null=True)),
                ('hs1_lp', models.TextField(blank=True, db_column='HS1_LP', null=True)),
                ('hs5_ts', models.TextField(blank=True, db_column='HS5_TS', null=True)),
                ('hs6_ts', models.TextField(blank=True, db_column='HS6_TS', null=True)),
                ('oc1_ts', models.TextField(blank=True, db_column='OC1_TS', null=True)),
                ('rt1_ts', models.TextField(blank=True, db_column='RT1_TS', null=True)),
                ('det_ts', models.TextField(blank=True, db_column='DET_TS', null=True)),
                ('cm3_ts', models.TextField(blank=True, db_column='CM3_TS', null=True)),
                ('pk1_ts', models.TextField(blank=True, db_column='PK1_TS', null=True)),
                ('pkt_ts', models.TextField(blank=True, db_column='PKT_TS', null=True)),
                ('nim_ts', models.TextField(blank=True, db_column='NIM_TS', null=True)),
                ('pku_ts', models.TextField(blank=True, db_column='PKU_TS', null=True)),
                ('hs4_sb', models.TextField(blank=True, db_column='HS4_SB', null=True)),
                ('hs8_sb', models.TextField(blank=True, db_column='HS8_SB', null=True)),
                ('hs9_sb', models.TextField(blank=True, db_column='HS9_SB', null=True)),
                ('hs1_sb', models.TextField(blank=True, db_column='HS1_SB', null=True)),
                ('cm4_sb', models.TextField(blank=True, db_column='CM4_SB', null=True)),
                ('cm6_sb', models.TextField(blank=True, db_column='CM6_SB', null=True)),
                ('cm9_sb', models.TextField(blank=True, db_column='CM9_SB', null=True)),
                ('cm1_sb', models.TextField(blank=True, db_column='CM1_SB', null=True)),
                ('st1_sb', models.TextField(blank=True, db_column='ST1_SB', null=True)),
            ],
            options={
                'db_table': 'ItemMasterProductFG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMasterProductWIP',
            fields=[
                ('field_id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('field_zca', models.TextField(blank=True, db_column='zca', null=True)),
                ('field_mc', models.TextField(blank=True, db_column='mc', null=True)),
                ('field_name', models.TextField(blank=True, db_column='name', null=True)),
                ('field_brand', models.TextField(blank=True, db_column='brand', null=True)),
                ('field_type', models.TextField(blank=True, db_column='type', null=True)),
                ('expr1', models.IntegerField(blank=True, db_column='Expr1', null=True)),
                ('field_matno', models.TextField(blank=True, db_column='Matno', null=True)),
                ('field_namethai', models.TextField(blank=True, db_column='NameThai', null=True)),
                ('field_nameeng', models.TextField(blank=True, db_column='NameEng', null=True)),
                ('field_prodgroup', models.TextField(blank=True, db_column='ProdGroup', null=True)),
                ('field_prodname', models.TextField(blank=True, db_column='Prodname', null=True)),
                ('field_size', models.TextField(blank=True, db_column='Size', null=True)),
                ('field_length', models.IntegerField(blank=True, db_column='Length', null=True)),
                ('field_lengthpallet', models.IntegerField(blank=True, db_column='LengthPallet', null=True)),
                ('field_pcspallet', models.IntegerField(blank=True, db_column='PcsPallet', null=True)),
                ('field_layer', models.IntegerField(blank=True, db_column='Layer', null=True)),
                ('field_kgpcs', models.FloatField(blank=True, db_column='KgPcs', null=True)),
                ('expr2', models.IntegerField(blank=True, db_column='Expr2', null=True)),
                ('matno', models.TextField(blank=True, db_column='MatNo', null=True)),
                ('mat_eng', models.TextField(blank=True, db_column='Mat_Eng', null=True)),
                ('mat_thai', models.TextField(blank=True, db_column='Mat_Thai', null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, db_column='PCsPerPallet', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('groups', models.TextField(blank=True, db_column='Groups', null=True)),
                ('subgroup', models.TextField(blank=True, db_column='Subgroup', null=True)),
                ('spec', models.TextField(blank=True, db_column='Spec', null=True)),
                ('size', models.IntegerField(blank=True, db_column='Size1', null=True)),
                ('tickness', models.IntegerField(blank=True, db_column='Tickness', null=True)),
                ('color', models.TextField(blank=True, db_column='Color', null=True)),
                ('report_type', models.TextField(blank=True, db_column='Report_Type', null=True)),
                ('destination', models.TextField(blank=True, null=True)),
                ('typeproduct', models.TextField(blank=True, null=True)),
                ('ct1', models.TextField(blank=True, db_column='CT1', null=True)),
                ('ct2', models.TextField(blank=True, db_column='CT2', null=True)),
                ('ct3', models.TextField(blank=True, db_column='CT3', null=True)),
                ('ct4', models.TextField(blank=True, db_column='CT4', null=True)),
                ('xy1', models.TextField(blank=True, db_column='XY1', null=True)),
                ('cm5', models.TextField(blank=True, db_column='CM5', null=True)),
                ('cm6', models.TextField(blank=True, db_column='CM6', null=True)),
                ('cm7', models.TextField(blank=True, db_column='CM7', null=True)),
                ('cm8', models.TextField(blank=True, db_column='CM8', null=True)),
                ('as1', models.TextField(blank=True, db_column='AS1', null=True)),
                ('pk1', models.TextField(blank=True, db_column='PK1', null=True)),
                ('pk2', models.TextField(blank=True, db_column='PK2', null=True)),
                ('pk3', models.TextField(blank=True, db_column='PK3', null=True)),
                ('pk4', models.TextField(blank=True, db_column='PK4', null=True)),
                ('pk5', models.TextField(blank=True, db_column='PK5', null=True)),
                ('dp1', models.TextField(blank=True, db_column='DP1', null=True)),
                ('det', models.TextField(blank=True, db_column='DET', null=True)),
                ('ms1', models.TextField(blank=True, db_column='MS1', null=True)),
                ('oc1', models.TextField(blank=True, db_column='OC1', null=True)),
                ('oc2', models.TextField(blank=True, db_column='OC2', null=True)),
                ('os1', models.TextField(blank=True, db_column='OS1', null=True)),
                ('pl1', models.TextField(blank=True, db_column='PL1', null=True)),
                ('rt1', models.TextField(blank=True, db_column='RT1', null=True)),
                ('rt2', models.TextField(blank=True, db_column='RT2', null=True)),
                ('sd1', models.TextField(blank=True, db_column='SD1', null=True)),
                ('seg', models.TextField(blank=True, db_column='SEG', null=True)),
                ('dp2', models.TextField(blank=True, db_column='DP2', null=True)),
                ('pk6', models.TextField(blank=True, db_column='PK6', null=True)),
            ],
            options={
                'db_table': 'ItemMasterProductWIP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LockTiger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_goodsreceive_to_tiger', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('idmainfromwms_goodsreceive_to_tiger', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('matno', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('matname', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=100, null=True)),
                ('dateproductionz', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('shiftproductionz', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=1, null=True)),
                ('machine', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=3, null=True)),
                ('datelock', models.DateField(blank=True, null=True)),
                ('qtylock', models.IntegerField(blank=True, null=True)),
                ('notelock', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=100, null=True)),
                ('statuslock', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=50, null=True)),
                ('numberpallet01', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet02', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet03', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet04', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet05', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet06', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet07', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet08', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet09', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet10', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet11', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet12', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet13', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet14', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet15', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet16', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet17', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet18', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet19', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet20', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet21', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet22', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet23', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet24', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet25', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet26', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet27', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet28', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet29', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet30', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet31', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet32', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet33', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet34', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet35', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet36', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet37', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet38', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet39', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet40', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet41', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet42', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet43', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet44', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet45', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet46', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet47', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet48', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet49', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet50', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet51', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet52', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet53', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet54', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet55', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet56', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet57', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet58', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet59', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet60', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet61', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet62', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet63', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet64', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet65', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet66', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet67', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet68', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet69', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet70', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet71', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet72', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet73', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet74', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet75', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet76', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet77', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet78', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet79', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet80', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet81', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet82', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet83', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet84', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet85', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet86', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet87', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet88', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet89', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet90', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet91', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet92', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet93', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet94', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet95', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet96', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet97', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet98', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
                ('numberpallet99', models.CharField(blank=True, db_collation='Thai_CI_AS', max_length=10, null=True)),
            ],
            options={
                'db_table': 'lock_tiger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MasterProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField(blank=True, db_column='_id', null=True)),
                ('field_zca', models.TextField(blank=True, db_column='_zca', null=True)),
                ('field_mc', models.TextField(blank=True, db_column='_mc', null=True)),
                ('field_name', models.TextField(blank=True, db_column='_name', null=True)),
                ('field_brand', models.TextField(blank=True, db_column='_brand', null=True)),
                ('field_type', models.TextField(blank=True, db_column='_type', null=True)),
                ('field_mateng', models.TextField(blank=True, db_column='_MatEng', null=True)),
                ('field_pcsperpallet', models.IntegerField(blank=True, db_column='_PCsPerPallet', null=True)),
                ('field_typeprod', models.TextField(blank=True, db_column='_TypeProd', null=True)),
                ('field_groups', models.TextField(blank=True, db_column='_Groups', null=True)),
                ('field_subgroup', models.TextField(blank=True, db_column='_Subgroup', null=True)),
                ('field_spec', models.TextField(blank=True, db_column='_Spec', null=True)),
                ('field_size', models.IntegerField(blank=True, db_column='_Size', null=True)),
                ('field_tickness', models.FloatField(blank=True, db_column='_Tickness', null=True)),
                ('field_color', models.TextField(blank=True, db_column='_Color', null=True)),
                ('field_reporttype', models.TextField(blank=True, db_column='_ReportType', null=True)),
                ('field_destination', models.TextField(blank=True, db_column='_destination', null=True)),
                ('field_typeproduct', models.TextField(blank=True, db_column='_typeproduct', null=True)),
                ('field_ct1', models.TextField(blank=True, db_column='_CT1', null=True)),
                ('field_ct2', models.TextField(blank=True, db_column='_CT2', null=True)),
                ('field_ct3', models.TextField(blank=True, db_column='_CT3', null=True)),
                ('field_ct4', models.TextField(blank=True, db_column='_CT4', null=True)),
                ('field_xy1', models.TextField(blank=True, db_column='_XY1', null=True)),
                ('field_cm5', models.TextField(blank=True, db_column='_CM5', null=True)),
                ('field_cm6', models.TextField(blank=True, db_column='_CM6', null=True)),
                ('field_cm7', models.TextField(blank=True, db_column='_CM7', null=True)),
                ('field_cm8', models.TextField(blank=True, db_column='_CM8', null=True)),
                ('field_as1', models.TextField(blank=True, db_column='_AS1', null=True)),
                ('field_pk1', models.TextField(blank=True, db_column='_PK1', null=True)),
                ('field_pk2', models.TextField(blank=True, db_column='_PK2', null=True)),
                ('field_pk3', models.TextField(blank=True, db_column='_PK3', null=True)),
                ('field_pk4', models.TextField(blank=True, db_column='_PK4', null=True)),
                ('field_pk5', models.TextField(blank=True, db_column='_PK5', null=True)),
                ('field_dp1', models.TextField(blank=True, db_column='_DP1', null=True)),
                ('field_det', models.TextField(blank=True, db_column='_DET', null=True)),
                ('field_ms1', models.TextField(blank=True, db_column='_MS1', null=True)),
                ('field_oc1', models.TextField(blank=True, db_column='_OC1', null=True)),
                ('field_oc2', models.TextField(blank=True, db_column='_OC2', null=True)),
                ('field_os1', models.TextField(blank=True, db_column='_OS1', null=True)),
                ('field_pl1', models.TextField(blank=True, db_column='_PL1', null=True)),
                ('field_rt1', models.TextField(blank=True, db_column='_RT1', null=True)),
                ('field_rt2', models.TextField(blank=True, db_column='_RT2', null=True)),
                ('field_sd1', models.TextField(blank=True, db_column='_SD1', null=True)),
                ('field_seg', models.TextField(blank=True, db_column='_SEG', null=True)),
                ('field_dp2', models.TextField(blank=True, db_column='_DP2', null=True)),
                ('field_pk6', models.TextField(blank=True, db_column='_PK6', null=True)),
                ('field_namethai', models.TextField(blank=True, db_column='_NameThai', null=True)),
                ('field_nameeng', models.TextField(blank=True, db_column='_NameEng', null=True)),
                ('field_prodgroup', models.TextField(blank=True, db_column='_ProdGroup', null=True)),
                ('field_prodname', models.TextField(blank=True, db_column='_Prodname', null=True)),
                ('field_prodspec_wxlxh', models.TextField(blank=True, db_column='_ProdSpec_WxLxH', null=True)),
                ('field_length', models.IntegerField(blank=True, db_column='_Length', null=True)),
                ('field_lengthcal', models.IntegerField(blank=True, db_column='_LengthCal', null=True)),
                ('field_pcspallet', models.IntegerField(blank=True, db_column='_PcsPallet', null=True)),
                ('field_layer', models.IntegerField(blank=True, db_column='_Layer', null=True)),
                ('field_kgpcs', models.FloatField(blank=True, db_column='_KgPcs', null=True)),
            ],
            options={
                'db_table': 'MasterProduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField(blank=True, db_column='_id', null=True)),
                ('field_mc', models.TextField(blank=True, db_column='_MC', null=True)),
                ('field_typeno', models.IntegerField(blank=True, db_column='_TYPENO', null=True)),
                ('field_type', models.TextField(blank=True, db_column='_TYPE', null=True)),
                ('field_zca', models.TextField(blank=True, db_column='_ZCA', null=True)),
                ('field_name', models.TextField(blank=True, db_column='_NAME', null=True)),
                ('field_source', models.TextField(blank=True, db_column='_SOURCE', null=True)),
                ('field_destination', models.TextField(blank=True, db_column='_DESTINATION', null=True)),
            ],
            options={
                'db_table': 'ProcessLock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFrom',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('zca', models.TextField(blank=True, null=True)),
                ('mc', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Product_from',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stockbalancetiger',
            fields=[
                ('zca', models.CharField(db_collation='Thai_CI_AS', max_length=50, primary_key=True, serialize=False)),
                ('urstock', models.IntegerField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('qi', models.IntegerField(blank=True, null=True)),
                ('datetimeupdate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'StockbalanceTiger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewActiveplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.TextField(blank=True, db_column='Company', null=True)),
                ('plant', models.IntegerField(blank=True, db_column='Plant', null=True)),
                ('shift', models.TextField(blank=True, db_column='Shift', null=True)),
                ('planweek', models.TextField(blank=True, db_column='PlanWeek', null=True)),
                ('versionno', models.IntegerField(blank=True, db_column='VersionNo', null=True)),
                ('planname', models.TextField(blank=True, db_column='PlanName', null=True)),
                ('machine', models.TextField(blank=True, db_column='Machine', null=True)),
                ('materialcode', models.TextField(blank=True, db_column='MaterialCode', null=True)),
                ('materialname', models.TextField(blank=True, db_column='MaterialName', null=True)),
                ('planweight', models.TextField(blank=True, db_column='PlanWeight', null=True)),
                ('plancount', models.FloatField(blank=True, db_column='PlanCount', null=True)),
                ('starttime', models.TextField(blank=True, db_column='StartTime', null=True)),
                ('duration', models.FloatField(blank=True, db_column='Duration', null=True)),
                ('operationcode', models.TextField(blank=True, db_column='OperationCode', null=True)),
                ('setupduration', models.FloatField(blank=True, db_column='SetupDuration', null=True)),
                ('cleaningduration', models.FloatField(blank=True, db_column='CleaningDuration', null=True)),
                ('startupduration', models.FloatField(blank=True, db_column='StartupDuration', null=True)),
                ('ms', models.FloatField(blank=True, db_column='MS', null=True)),
                ('es', models.FloatField(blank=True, db_column='ES', null=True)),
                ('os', models.FloatField(blank=True, db_column='OS', null=True)),
                ('mc', models.FloatField(blank=True, db_column='MC', null=True)),
                ('ec', models.FloatField(blank=True, db_column='EC', null=True)),
                ('oc', models.FloatField(blank=True, db_column='OC', null=True)),
                ('msu', models.FloatField(blank=True, db_column='MSU', null=True)),
                ('esu', models.FloatField(blank=True, db_column='ESU', null=True)),
                ('osu', models.FloatField(blank=True, db_column='OSU', null=True)),
                ('contractor', models.TextField(blank=True, db_column='Contractor', null=True)),
                ('buname', models.TextField(blank=True, db_column='BUName', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'View_activeplan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role_id', models.IntegerField(choices=[(1, 'UserAdmin'), (2, 'UserPlaner'), (3, 'UserProduction'), (4, 'UserLab'), (5, 'UserForklift'), (6, 'UserManager'), (7, 'UserPIS')], default=1)),
                ('employee_id', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BifrostStockBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zca_no', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_block', models.IntegerField(blank=True, null=True)),
                ('qty_qi', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DistanceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse', models.CharField(blank=True, max_length=50, null=True)),
                ('table', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DontsendData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('shift', models.CharField(blank=True, max_length=100, null=True)),
                ('fill', models.CharField(blank=True, max_length=100, null=True)),
                ('withdraw', models.CharField(blank=True, max_length=100, null=True)),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forklift_Worklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('type_transport', models.CharField(blank=True, max_length=100, null=True)),
                ('from_location', models.CharField(blank=True, max_length=100, null=True)),
                ('to_location', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_success', models.BooleanField(blank=True, default=False, null=True)),
                ('forklift_force', models.BooleanField(blank=True, default=False, null=True)),
                ('forklift_force_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_force_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_scan_check', models.IntegerField(blank=True, null=True)),
                ('forklift_scan_check_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_scan_check_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_scan_location', models.IntegerField(blank=True, null=True)),
                ('forklift_scan_location_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_scan_location_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_scan_finish', models.IntegerField(blank=True, null=True)),
                ('forklift_scan_finish_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_scan_finish_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_truck', models.IntegerField(blank=True, null=True)),
                ('forklift_truck_up_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_truck_up_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('forklift_truck_down_time', models.DateTimeField(blank=True, null=True)),
                ('forklift_truck_down_operator', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_no', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pallet', models.IntegerField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('batch', models.CharField(blank=True, max_length=100, null=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('status_lock', models.BooleanField(blank=True, null=True)),
                ('tiger_fillplan_link', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListFillPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_loss', models.IntegerField(blank=True, null=True)),
                ('qty_lab', models.IntegerField(blank=True, null=True)),
                ('offset_pallet_no', models.IntegerField(blank=True, default=1, null=True)),
                ('ticket_problem_yellow', models.CharField(blank=True, max_length=500, null=True)),
                ('ticket_qty_yellow', models.IntegerField(blank=True, null=True)),
                ('ticket_problem_blue', models.CharField(blank=True, max_length=500, null=True)),
                ('ticket_qty_blue', models.IntegerField(blank=True, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('carve_date', models.DateField(blank=True, null=True)),
                ('carve_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('fill_success', models.CharField(blank=True, max_length=100, null=True)),
                ('approve_fill', models.CharField(blank=True, max_length=100, null=True)),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_keyin', models.DateTimeField(blank=True, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_approve', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListTicketPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_problem', models.CharField(blank=True, max_length=500, null=True)),
                ('ticket_qty', models.IntegerField(blank=True, null=True)),
                ('ticket_note', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('note_production', models.CharField(blank=True, max_length=500, null=True)),
                ('note_planner', models.CharField(blank=True, max_length=500, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('carve_date', models.DateField(blank=True, null=True)),
                ('carve_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('fill_success', models.CharField(blank=True, max_length=100, null=True)),
                ('approve_fill', models.CharField(blank=True, max_length=100, null=True)),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_keyin', models.DateTimeField(blank=True, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_approve', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('fillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListWithdrawPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('qtysend', models.IntegerField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('withdraw_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('withdraw_success', models.CharField(blank=True, max_length=100, null=True)),
                ('approve_withdraw', models.CharField(blank=True, max_length=100, null=True)),
                ('approve_lab', models.CharField(blank=True, max_length=100, null=True)),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_keyin', models.DateTimeField(blank=True, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('datetime_approve', models.DateTimeField(blank=True, null=True)),
                ('note_production', models.CharField(blank=True, max_length=500, null=True)),
                ('note_planner', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('status_1', models.CharField(blank=True, max_length=100, null=True)),
                ('status_2', models.CharField(blank=True, max_length=100, null=True)),
                ('status_3', models.CharField(blank=True, max_length=100, null=True)),
                ('have_processlock', models.CharField(blank=True, max_length=100, null=True)),
                ('delete_add', models.CharField(blank=True, max_length=100, null=True)),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='MapListFillPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_type', models.CharField(blank=True, max_length=100, null=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_problem', models.CharField(blank=True, max_length=500, null=True)),
                ('qty_format', models.IntegerField(blank=True, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_loss', models.IntegerField(blank=True, null=True)),
                ('qty_lab', models.IntegerField(blank=True, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_fill', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_approve_fill', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('labstatus_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.labstatus')),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('listticketplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listticketplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='MapListTransferPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transfer_success', models.BooleanField(blank=True, default=False, null=True)),
                ('total_job', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pdplan_machine', models.CharField(max_length=100)),
                ('pdplan_date', models.DateField()),
                ('pdplan_shift', models.CharField(max_length=100)),
                ('pdplan_operator', models.CharField(max_length=100)),
                ('pdplan_planapprove', models.CharField(max_length=100)),
                ('pdplan_labapprove', models.CharField(max_length=100)),
                ('pdplan_delete', models.CharField(max_length=100)),
                ('pdplan_delete_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('pdplan_delete_datetime', models.DateTimeField(blank=True, null=True)),
                ('pdplan_status_1', models.CharField(blank=True, max_length=100, null=True)),
                ('pdplan_status_2', models.CharField(blank=True, max_length=100, null=True)),
                ('pdplan_status_3', models.CharField(blank=True, max_length=100, null=True)),
                ('status_1', models.CharField(blank=True, max_length=100, null=True)),
                ('status_2', models.CharField(blank=True, max_length=100, null=True)),
                ('status_3', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zones', to='wms.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='UserProduction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPlaner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLab',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserForklift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAdmin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Storage_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('row', models.IntegerField()),
                ('column', models.IntegerField()),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.IntegerField()),
                ('lab', models.BooleanField(default=False)),
                ('lock', models.BooleanField(default=False)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storages', to='wms.product')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storages', to='wms.zone')),
            ],
        ),
        migrations.CreateModel(
            name='MapListWithdrawPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('qty_total_pallet', models.IntegerField(blank=True, null=True)),
                ('qty_format', models.CharField(blank=True, max_length=100, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('lab_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('withdraw_success', models.BooleanField(blank=True, default=False, null=True)),
                ('labstatus_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.labstatus')),
                ('listwithdraw_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
            ],
        ),
        migrations.CreateModel(
            name='MapListWithdrawPallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('lab_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('machine_to', models.CharField(blank=True, max_length=100, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('column', models.IntegerField(blank=True, null=True)),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('sub_column', models.IntegerField(blank=True, default=1, null=True)),
                ('lab', models.BooleanField(blank=True, default=False, null=True)),
                ('lock', models.BooleanField(blank=True, default=False, null=True)),
                ('success', models.BooleanField(blank=True, default=False, null=True)),
                ('map_approve', models.IntegerField(default=0, null=True)),
                ('fillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillplan')),
                ('labstatus_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.labstatus')),
                ('listgood_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('listwithdraw_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
                ('maplistwithdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawplan')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.product')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='MapListTransferPallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('lab_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('maplistmanagement_link', models.IntegerField(blank=True, null=True)),
                ('type_transfer', models.CharField(blank=True, max_length=100, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('column', models.IntegerField(blank=True, null=True)),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('sub_column', models.IntegerField(blank=True, default=1, null=True)),
                ('lab', models.IntegerField(blank=True, default=0, null=True)),
                ('lock', models.BooleanField(blank=True, default=False, null=True)),
                ('success', models.BooleanField(blank=True, default=False, null=True)),
                ('map_approve', models.IntegerField(default=0, null=True)),
                ('labstatus_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.labstatus')),
                ('listgood_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('maplisttransferplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplisttransferplan')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.product')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.warehouse')),
            ],
        ),
        migrations.AddField(
            model_name='maplistfillplan',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.CreateModel(
            name='MapListFillPallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_type', models.CharField(blank=True, max_length=100, null=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_problem', models.CharField(blank=True, max_length=500, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('sub_column', models.IntegerField(blank=True, default=1, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('column', models.IntegerField(blank=True, null=True)),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('lab', models.BooleanField(blank=True, default=False, null=True)),
                ('lock', models.BooleanField(blank=True, default=False, null=True)),
                ('success', models.BooleanField(blank=True, default=False, null=True)),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('listticketplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listticketplanproduction')),
                ('maplistfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillplan')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.product')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='Map_management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('lab_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('warehouse', models.CharField(blank=True, max_length=100, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('column', models.IntegerField(blank=True, null=True)),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('sub_column', models.IntegerField(blank=True, default=1, null=True)),
                ('damaged', models.IntegerField(default=0, null=True)),
                ('lab', models.IntegerField(blank=True, default=0, null=True)),
                ('lock', models.BooleanField(blank=True, default=False, null=True)),
                ('success', models.BooleanField(blank=True, default=False, null=True)),
                ('map_approve', models.IntegerField(default=0, null=True)),
                ('forklift_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.forklift_worklist')),
                ('listgood_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('maplistfillpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillpallet')),
                ('maplistfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillplan')),
                ('maplisttransferpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplisttransferpallet')),
                ('maplisttransferplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplisttransferplan')),
                ('maplistwithdrawpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawpallet')),
                ('maplistwithdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawplan')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
            ],
        ),
        migrations.CreateModel(
            name='map_location_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('x_position', models.FloatField(blank=True, null=True)),
                ('y_position', models.FloatField(blank=True, null=True)),
                ('max_level', models.IntegerField(blank=True, null=True)),
                ('size', models.FloatField(blank=True, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('row', models.IntegerField(blank=True, null=True)),
                ('column', models.IntegerField(blank=True, null=True)),
                ('mapid', models.CharField(blank=True, max_length=200, null=True)),
                ('actual_size', models.FloatField(blank=True, null=True)),
                ('sub_column', models.IntegerField(blank=True, null=True)),
                ('type_location', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('activate', models.BooleanField(default=True, null=True)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.warehouse')),
            ],
        ),
        migrations.AddField(
            model_name='listwithdrawplanproduction',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.AddField(
            model_name='listticketplanproduction',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.CreateModel(
            name='ListReturnPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_good_format', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_bad', models.IntegerField(blank=True, null=True)),
                ('qty_bad_format', models.CharField(blank=True, max_length=100, null=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('return_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('return_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('note_production', models.CharField(blank=True, max_length=300, null=True)),
                ('note_planner', models.CharField(blank=True, max_length=300, null=True)),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('withdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListReturnPlanNoteProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.CharField(blank=True, max_length=400, null=True)),
                ('returnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listreturnplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListReturnPalletProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('maplistwithdrawpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawpallet')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('returnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listreturnplanproduction')),
                ('withdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListLabReturnPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_good_format', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_bad', models.IntegerField(blank=True, null=True)),
                ('qty_bad_format', models.CharField(blank=True, max_length=100, null=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('return_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('return_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('note_production', models.CharField(blank=True, max_length=300, null=True)),
                ('note_planner', models.CharField(blank=True, max_length=300, null=True)),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('withdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListLabReturnPalletProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_problem', models.CharField(blank=True, max_length=500, null=True)),
                ('qty_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_return_status', models.IntegerField(blank=True, default=0, null=True)),
                ('ticket_return_send', models.IntegerField(blank=True, default=0, null=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('labreturnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listlabreturnplanproduction')),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('maplistwithdrawpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawpallet')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('withdrawplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listwithdrawplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListLabBadUnlockPlanProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_good', models.IntegerField(blank=True, null=True)),
                ('qty_good_format', models.CharField(blank=True, max_length=100, null=True)),
                ('qty_bad', models.IntegerField(blank=True, null=True)),
                ('qty_bad_format', models.CharField(blank=True, max_length=100, null=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('return_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('return_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_keyin', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_approve', models.CharField(blank=True, max_length=100, null=True)),
                ('note_production', models.CharField(blank=True, max_length=300, null=True)),
                ('note_planner', models.CharField(blank=True, max_length=300, null=True)),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('returnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listreturnplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListLabBadUnlockPalletProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('return_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('product_machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('product_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product_date', models.DateField(blank=True, null=True)),
                ('product_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('return_type', models.CharField(blank=True, max_length=100, null=True)),
                ('pcsperpallet', models.IntegerField(blank=True, null=True)),
                ('product_length', models.IntegerField(blank=True, null=True)),
                ('kgpcs', models.FloatField(blank=True, null=True)),
                ('ton', models.FloatField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('receive_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('send_shift', models.CharField(blank=True, max_length=100, null=True)),
                ('labunlockbadplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listlabbadunlockplanproduction')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
                ('returnpallet_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listreturnpalletproduction')),
                ('returnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listreturnplanproduction')),
            ],
        ),
        migrations.CreateModel(
            name='ListFillTicketPalletProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('ticket_problem', models.CharField(blank=True, max_length=500, null=True)),
                ('qty_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('ticket_return_status', models.IntegerField(blank=True, default=0, null=True)),
                ('ticket_return_send', models.IntegerField(blank=True, default=0, null=True)),
                ('fillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('fillticketreturnplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listticketplanproduction')),
            ],
        ),
        migrations.AddField(
            model_name='listfillplanproduction',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.AddField(
            model_name='labstatus',
            name='listgood_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction'),
        ),
        migrations.AddField(
            model_name='labstatus',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.CreateModel(
            name='LabDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zca_no', models.CharField(blank=True, max_length=100, null=True)),
                ('pallet_no', models.IntegerField(blank=True, null=True)),
                ('status_lock', models.BooleanField(blank=True, null=True)),
                ('note_lock', models.CharField(blank=True, max_length=100, null=True)),
                ('labstatus_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.labstatus')),
            ],
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='listgood_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplistfillpallet_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillpallet'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplistfillplan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistfillplan'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplisttransferpallet_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplisttransferpallet'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplisttransferplan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplisttransferplan'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplistwithdrawpallet_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawpallet'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='maplistwithdrawplan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.maplistwithdrawplan'),
        ),
        migrations.AddField(
            model_name='forklift_worklist',
            name='plan_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction'),
        ),
        migrations.CreateModel(
            name='FGPlanningStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('machine', models.CharField(blank=True, max_length=100, null=True)),
                ('zca_on', models.CharField(blank=True, max_length=100, null=True)),
                ('name_th', models.CharField(blank=True, max_length=400, null=True)),
                ('name_en', models.CharField(blank=True, max_length=400, null=True)),
                ('location_1_select_1', models.CharField(blank=True, max_length=300, null=True)),
                ('location_1_select_2', models.CharField(blank=True, max_length=300, null=True)),
                ('location_1_select_3', models.CharField(blank=True, max_length=300, null=True)),
                ('location_1_info', models.CharField(blank=True, max_length=600, null=True)),
                ('location_2_select_1', models.CharField(blank=True, max_length=300, null=True)),
                ('location_2_select_2', models.CharField(blank=True, max_length=300, null=True)),
                ('location_2_select_3', models.CharField(blank=True, max_length=300, null=True)),
                ('location_2_info', models.CharField(blank=True, max_length=600, null=True)),
                ('location_3_select_1', models.CharField(blank=True, max_length=300, null=True)),
                ('location_3_select_2', models.CharField(blank=True, max_length=300, null=True)),
                ('location_3_select_3', models.CharField(blank=True, max_length=300, null=True)),
                ('location_3_info', models.CharField(blank=True, max_length=600, null=True)),
                ('location_4_select_1', models.CharField(blank=True, max_length=300, null=True)),
                ('location_4_select_2', models.CharField(blank=True, max_length=300, null=True)),
                ('location_4_select_3', models.CharField(blank=True, max_length=300, null=True)),
                ('location_4_info', models.CharField(blank=True, max_length=600, null=True)),
                ('location_5_select_1', models.CharField(blank=True, max_length=300, null=True)),
                ('location_5_select_2', models.CharField(blank=True, max_length=300, null=True)),
                ('location_5_select_3', models.CharField(blank=True, max_length=300, null=True)),
                ('location_5_info', models.CharField(blank=True, max_length=600, null=True)),
                ('listfillplan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.listfillplanproduction')),
                ('plan_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.planproduction')),
            ],
        ),
    ]
